##################################################
# Python 라이브러리로 데이터 분석하기
##################################################
import pandas as pd

# 1. Python 라이브러리 함수를 사용하여 엑셀 파일을 불러오고, DataFrame을 출력해주세요.
# r을 경로 앞에 붙이는 것은 Windows에서 백슬래시(\)를 이스케이프 문자로 처리하지 않도록 하는 것
df_excel = pd.read_excel(r'D:\Dev\study\sparta\quest\chapter_01\관서별 5대범죄 발생 및 검거.xlsx')
df_excel.head(5)

# ------------------------------------------------------------------------------------------------------------------

# 2. 각 경찰서(`관서명`)를 해당 구 이름으로 매핑하여 '구별'이라는 새로운 column을 생성하고, DataFrame을 출력해주세요.
# - 매칭되지 않는 경찰서명에 대해서는 기본값 `'구 없음'`을 할당합니다.
gu_data = {
    '서대문서': '서대문구', '수서서': '강남구', '강서서': '강서구', '서초서': '서초구',
    '서부서': '은평구', '중부서': '중구', '종로서': '종로구', '남대문서': '중구',
    '혜화서': '종로구', '용산서': '용산구', '성북서': '성북구', '동대문서': '동대문구',
    '마포서': '마포구', '영등포서': '영등포구', '성동서': '성동구', '동작서': '동작구',
    '광진서': '광진구', '강북서': '강북구', '금천서': '금천구', '중랑서': '중랑구',
    '강남서': '강남구', '관악서': '관악구', '강동서': '강동구', '종암서': '성북구', 
    '구로서': '구로구', '양천서': '양천구', '송파서': '송파구', '노원서': '노원구', 
    '방배서': '서초구', '은평서': '은평구', '도봉서': '도봉구'
}

# 1) map() 함수로 딕셔너리 매핑하기
df_excel['구별'] = df_excel['관서명'].map(gu_data).fillna('구 없음')
df_excel.set_index("관서명", inplace=True)
df_excel.head(5)

# 2) gu도 df로 만들어서 merge 시켜보기 (그냥 해봤..)
# gu_items = list(gu_data.items())
# df_gu = pd.DataFrame(gu_items, columns=['관서명', '구별'])
# df_gu.head(3)

# mapping_df = pd.merge(df_excel, df_gu, how='left', on='관서명').fillna('구 없음')
# mapping_df.head(5)

# ------------------------------------------------------------------------------------------------------------------

# 3. pivot_table 을 사용하여 관서별 데이터를 구별 데이터로 변경하고, 같은 구의 경우에는 sum을 적용하여 더해주세요. (index : 관서명 -> 구별)
#df_excel.set_index('구별').groupby('구별').sum()
pivot = df_excel.pivot_table(index='구별', aggfunc='sum')
pivot.head(5)

# ------------------------------------------------------------------------------------------------------------------

# 4. '구 없음' 행은 drop 을 활용하여 삭제해주세요.
pivot.drop('구 없음', inplace=True)
pivot.head(5)

# ------------------------------------------------------------------------------------------------------------------

# 5. 각 범죄 별로 검거율을 계산하고, 각 검거율 데이터 column을 DataFrame에 추가해주세요.
# 강간검거율,
# 강도검거율,
# 살인검거율,
# 절도검거율,
# 폭력검거율,
# 검거율

assert_key = ['강간', '강도', '살인', '절도', '폭력', '소계']

for key in assert_key:
    if key == '소계':
        pivot["검거율"] = pivot[f"{key}(검거)"] / pivot[f"{key}(발생)"]
    else:
        pivot[f"{key}검거율"] = pivot[f"{key}(검거)"] / pivot[f"{key}(발생)"]

pivot.head(5)

# ------------------------------------------------------------------------------------------------------------------

# 6. 필요없는 column을 del 을 사용하여 삭제해주세요.
del_columns = [
    '강간(검거)',
    '강도(검거)',
    '살인(검거)',
    '절도(검거)',
    '폭력(검거)',
    '소계(발생)',
    '소계(검거)'
]

# del :: Python 기본 구문 -> 메모리에서 직접 삭제 (복원 불가), 여러 컬럼을 한 번에 삭제 불가
for column in del_columns:
    del pivot[column]
pivot.head(5)
# drop (axis: 행 또는 열), (inplace: 원본 데이터 변경 여부) -> 유연성, 복원가능, 편리성 (실무에서 선호)
# pivot.drop(del_columns, inplace=True, axis=1)

# ------------------------------------------------------------------------------------------------------------------

# 7. DataFrame의 컬럼명을 rename 을 사용하여 변경해주세요.

rename_columns = {
    '강간(발생)':'강간',
    '강도(발생)':'강도',
    '살인(발생)':'살인',
    '절도(발생)':'절도',
    '폭력(발생)':'폭력'
}

pivot.rename(columns=rename_columns, inplace=True)
pivot.head(5)
